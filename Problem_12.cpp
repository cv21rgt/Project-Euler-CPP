/*
 *  The sequence of triangle numbers is generated by adding the natural numbers. 
 *  So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 *
 *  1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 *  Let us list the factors of the first seven triangle numbers:
 *
 *   1: 1
 *   3: 1,3
 *   6: 1,2,3,6
 *  10: 1,2,5,10
 *  15: 1,3,5,15
 *  21: 1,3,7,21
 *  28: 1,2,4,7,14,28
 * 
 *  We can see that 28 is the first triangle number to have over five divisors.
 *
 *  What is the value of the first triangle number to have over five hundred divisors?
 * 
 *  Solution: 76576500 with 576 factors
*/

#include <iostream>

int main()
{
    
    int triangleNumber {0};
    int naturalNumber {1};
    int numberOfFactors {0};

    while (numberOfFactors < 501)
    {
        // generate a triangle number 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
        triangleNumber += naturalNumber;
        
        // set number of factors to Zero for next triangle number
        numberOfFactors = 0;

        // get the factors of a triangle number and count them
        for (int i {1}; i <= triangleNumber; ++i)
        {
            if (triangleNumber % i == 0)
                numberOfFactors += 1;
        }        

        // increment the natural numbers by 1
        naturalNumber += 1;
    }

    std::cout << "The first triangle number to have over five hundred divisors/factors is " << triangleNumber 
              << "\nIt has " << numberOfFactors << " factors\n";

    std::cout << '\n';
    return 0;
}